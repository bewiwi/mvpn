<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Log', 'doctrine');

/**
 * BaseLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $server_id
 * @property integer $user_id
 * @property string $info
 * @property string $level
 * @property Server $Server
 * @property User $User
 * 
 * @method integer getId()        Returns the current record's "id" value
 * @method integer getServerId()  Returns the current record's "server_id" value
 * @method integer getUserId()    Returns the current record's "user_id" value
 * @method string  getInfo()      Returns the current record's "info" value
 * @method string  getLevel()     Returns the current record's "level" value
 * @method Server  getServer()    Returns the current record's "Server" value
 * @method User    getUser()      Returns the current record's "User" value
 * @method Log     setId()        Sets the current record's "id" value
 * @method Log     setServerId()  Sets the current record's "server_id" value
 * @method Log     setUserId()    Sets the current record's "user_id" value
 * @method Log     setInfo()      Sets the current record's "info" value
 * @method Log     setLevel()     Sets the current record's "level" value
 * @method Log     setServer()    Sets the current record's "Server" value
 * @method Log     setUser()      Sets the current record's "User" value
 * 
 * @package    m-vpn
 * @subpackage model
 * @author     LoÃ¯c PORTE
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('log');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('server_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('info', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('level', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Server', array(
             'local' => 'server_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}